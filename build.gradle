/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
 
allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    version = '1.0'
	apply plugin: 'java'
	apply plugin: 'checkstyle'
	
	compileJava.options.encoding = "UTF-8"
	compileTestJava.options.encoding = "UTF-8"
	
	java {
		sourceCompatibility = JavaVersion.VERSION_14
		targetCompatibility = JavaVersion.VERSION_14
	}

	checkstyle {
		toolVersion = "8.30"
		// checkstyle.xml copy from:
		// https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
		// the version should be as same as plugin version
		configFile = rootProject.file('config/checkstyle/checkstyle.xml')
		checkstyleTest.enabled = false
	}
	
	ext{
		springVersion = '5.2.7.RELEASE'
		springBootVersion = '2.3.1.RELEASE'
		springAmqpVersion = '2.2.8.RELEASE'
		hibernateVersion = '5.4.18.Final'

		hibernateJpaVersion = '1.0.0.Final'
		fasterXmlJacksonVersion = '2.11.1'
		floggerVersion = '0.5.1'
	}
	
	repositories {
		// Use jcenter for resolving dependencies.
		// You can declare any Maven/Ivy/file repository here.
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/release" }
		maven { url "https://repo.spring.io/libs-release" }
	   // maven { url "http://repo.spring.io/milestone" }
	   // maven { url "https://repo.spring.io/libs-milestone" }
	}

	dependencies {
		// https://mvnrepository.com/artifact/com.google.flogger/flogger
		implementation "com.google.flogger:flogger:$floggerVersion"
		// https://mvnrepository.com/artifact/com.google.flogger/flogger-system-backend
		implementation "com.google.flogger:flogger-system-backend:$floggerVersion"

		// This dependency is used by the application.
		implementation "org.springframework:spring-core:$springVersion"
		// https://mvnrepository.com/artifact/org.springframework/spring-context
		implementation "org.springframework:spring-context:$springVersion"

	}

}

